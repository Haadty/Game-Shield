Player_line = 3
Player_move_delay = 0.15

go.property("line0", vmath.vector3(0, 0, 0))
go.property("line1", vmath.vector3(0, 0, 0))
go.property("line2", vmath.vector3(0, 0, 0))
go.property("line3", vmath.vector3(0, 0, 0))
go.property("line4", vmath.vector3(0, 0, 0))

local _line_positions = {}
local _is_moving = false
local _queued_direction = nil
local _held_left = false
local _held_right = false
local _move_timer = 0
local _move_cooldown = Player_move_delay

function init(self)
	msg.post(".", "acquire_input_focus")
	_line_positions = {
		self.line0,
		self.line1,
		self.line2,
		self.line3,
		self.line4
	}
	go.set_position(_line_positions[Player_line + 1])
end

function update(self, dt)
	if _is_moving then
		_move_timer = 0
		return
	end

	if _held_left and _held_right then return end

	_move_timer = _move_timer - dt

	-- Movimento enfileirado
	if _queued_direction and _move_timer <= 0 then
		Try_move(_queued_direction)
		_queued_direction = nil
		_move_timer = _move_cooldown
		return
	end

	-- Movimento automático ao segurar
	if _move_timer <= 0 then
		if _held_left and not _held_right then
			Try_move("left")
			_move_timer = _move_cooldown
		elseif _held_right and not _held_left then
			Try_move("right")
			_move_timer = _move_cooldown
		end
	end
end

function on_input(self, action_id, action)
	local is_left = action_id == hash("left")
	local is_right = action_id == hash("right")

	if is_left then
		_held_left = action.pressed or (_held_left and not action.released)
	elseif is_right then
		_held_right = action.pressed or (_held_right and not action.released)
	end

	if _held_left and _held_right then return end

	if action.pressed then
		local direction = is_left and "left" or (is_right and "right" or nil)
		if direction then
			if _is_moving then
				_queued_direction = direction
			else
				Try_move(direction)
				_move_timer = _move_cooldown
			end
		end
	end
end

function Try_move(dir)
	-- BLOQUEIO DE MOVIMENTO CONFORME AÇÃO
	if Player_actual_action ~= Player_actions.idle and Player_actual_action ~= Player_actions.recharge then
		return
	end

	-- CANCELA RECHARGE SE MOVIMENTAR
	if Player_actual_action == Player_actions.recharge then
		msg.post("#Player_Actions", "reset_action")
	end

	local target_line = Player_line
	if dir == "left" and Player_line < 4 then
		target_line = Player_line + 1
	elseif dir == "right" and Player_line > 0 then
		target_line = Player_line - 1
	else
		return
	end

	local target_pos = _line_positions[target_line + 1]
	local current_pos = go.get_position()
	local final_pos = vmath.vector3(target_pos.x, target_pos.y, current_pos.z)

	_is_moving = true

	go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, final_pos, go.EASING_LINEAR, Player_move_delay, 0, function()
		Player_line = target_line
		_is_moving = false
	end)
end
