local Player = require "Scripts.Player_Status"

local _recharge_started = false

local function get_facing_direction()
	if Player.Player_line == 0 or Player.Player_line == 1 then
		return "left"
	elseif Player.Player_line == 3 or Player.Player_line == 4 then
		return "right"
	else
		return math.random(0, 1) == 0 and "left" or "right"
	end
end

local function play_directional_animation(base_name)
	local direction = get_facing_direction()
	local anim_name = base_name .. "_" .. direction
	msg.post("#Player", "play_animation", { id = hash(anim_name) })
end

local function play_specific_direction_animation(base_name, direction)
	local anim_name = base_name .. "_" .. direction
	msg.post("#Player", "play_animation", { id = hash(anim_name) })
end

local function play_idle_animation()
	msg.post("#Player", "play_animation", { id = hash("idle") })
end

function init(self)
	self.action_timer = 0
	_recharge_started = false
	msg.post(".", "acquire_input_focus")
	print("Init completa")
end

function update(self, dt)
	if Player.Player_actual_action ~= Player.Player_actions.idle then
		self.action_timer = self.action_timer + dt

		-- Entrou em RECHARGE
		if Player.Player_actual_action ~= Player.Player_actions.recharge
			and self.action_timer >= Player.Player_action_duration then

			Player.Player_actual_action = Player.Player_actions.recharge
			self.action_timer = 0
			_recharge_started = true
			print("Entrou em RECHARGE")
			play_idle_animation()
		end

		-- Final do RECHARGE
		if Player.Player_actual_action == Player.Player_actions.recharge
			and _recharge_started
			and self.action_timer >= Player.Player_action_recharge then

			Player.Player_actual_action = Player.Player_actions.idle
			self.action_timer = 0
			_recharge_started = false
			print("Ação finalizada, voltou para IDLE")
			play_idle_animation()
		end
	end
end

function on_input(self, action_id, action)
	if Player.Player_actual_action == Player.Player_actions.idle then
		if action_id == hash("block") and action.pressed then
			Player.Player_actual_action = Player.Player_actions.block
			play_directional_animation("block")
			print("Iniciou ação: BLOCK")
		elseif action_id == hash("parry") and action.pressed then
			Player.Player_actual_action = Player.Player_actions.parry
			play_directional_animation("parry")
			print("Iniciou ação: PARRY")
		elseif action_id == hash("absorb") and action.pressed then
			Player.Player_actual_action = Player.Player_actions.absorb
			play_directional_animation("absorb")
			print("Iniciou ação: ABSORB")
		end

		self.action_timer = 0
		_recharge_started = false
	end
end

function Reset_action(self)
	Player.Player_actual_action = Player.Player_actions.idle
	self.action_timer = 0
	_recharge_started = false
	go.set("#Player", "tint", vmath.vector4(1, 1, 1, 1))
	play_idle_animation()
	print("RESET MANUAL — voltou para IDLE")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("reset_action") then
		Reset_action(self)
	elseif message_id == hash("play_dash_animation") then
		if message and message.direction then
			play_specific_direction_animation("dash", message.direction)
		end
	elseif message_id == hash("reset_to_idle") then
		if Player.Player_actual_action == Player.Player_actions.idle then
			play_idle_animation()
		end
	end
end


